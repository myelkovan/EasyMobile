import Foundation
import UIKit


class #NAME#: UITableViewController{
	#IBOUTLET_LIST#
	var dataobject = #DATA_MODEL#()

       

	override func viewDidLoad() {
		super.viewDidLoad()
		dataobject.of_retrieve()
	}





   
	// TABLEVIEW MUST ********************************************************************************************
	//How many rows or sections will be in tableview
	override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
		return dataobject.data.count
	}

   

	// To Create rows send rows data to cell object
	override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
		let cell:#CELL_NAME# = self.tableView.dequeueReusableCell(withIdentifier: "Cell", for: indexPath) as! #CELL_NAME#

		let li_row = indexPath.row
		cell.setRow(row: dataobject.data[li_row])
		return cell
	}


	#SEARCH#
	// Search expression
	func searchBar(_ searchBar: UISearchBar, textDidChange searchText: String) {
		if searchText == "" {
			self.searchbar.text = ""
			DispatchQueue.main.async {
 				self.searchbar.endEditing(true)
			}
 			self.dataobject.data = self.dataobject.originaldata
 			self.tableView.reloadData()
 			return
		}else{
			dataobject.data = dataobject.originaldata.filter() { #FILTER_EXPRESSION# }
		}
		self.tableView.reloadData()
	}
	#ENDSEARCH#


	// TABLEVIEW MUST ********************************************************************************************

}








	/* Most used function for tableview. If you don't use delete them from here or from template
	override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
		selectedIndexPath = indexPath
		self.performSegue(withIdentifier: "toMessage", sender: self)
  	}
	
    
	override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
		if segue.identifier == "toMessage"{
 			let target_view = segue.destination as! v_message 
			target_view.name = dataobject.data[selectedIndexPath].name
		}
 	}
	*/



  
